import{makeObservable as e,configure as t,getDependencyTree as r,Reaction as n,_getGlobalState as o,observable as i,runInAction as a}from"mobx";import u,{useState as s,forwardRef as c,memo as f}from"react";import{unstable_batchedUpdates as l}from"react-dom";import{useSyncExternalStore as p}from"use-sync-external-store/shim";if(!s)throw new Error("mobx-react-lite requires React with Hooks support");if(!e)throw new Error("mobx-react-lite@3 requires mobx at least version 6 to be available");function d(e){e()}function m(e){e||(e=d),t({reactionScheduler:e})}var v=function(){return!0};function y(e){return r(e)}var b=!1;function h(e){b=e}function w(){return b}var g=new("undefined"!=typeof FinalizationRegistry?FinalizationRegistry:function(){function e(e){var t=this;this.finalize=void 0,this.registrations=new Map,this.sweepTimeout=void 0,this.sweep=function(e){void 0===e&&(e=1e4),clearTimeout(t.sweepTimeout),t.sweepTimeout=void 0;var r=Date.now();t.registrations.forEach((function(n,o){r-n.registeredAt>=e&&(t.finalize(n.value),t.registrations.delete(o))})),t.registrations.size>0&&t.scheduleSweep()},this.finalizeAllImmediately=function(){t.sweep(0)},this.finalize=e}var t=e.prototype;return t.register=function(e,t,r){this.registrations.set(r,{value:t,registeredAt:Date.now()}),this.scheduleSweep()},t.unregister=function(e){this.registrations.delete(e)},t.scheduleSweep=function(){void 0===this.sweepTimeout&&(this.sweepTimeout=setTimeout(this.sweep,1e4))},e}())((function(e){var t;null==(t=e.reaction)||t.dispose(),e.reaction=null})),S=o(),x=void 0!==S.globalVersion;function T(e){e.reaction=new n("observer"+e.name,(function(){x||(e.stateVersion=Symbol()),null==e.forceUpdate||e.forceUpdate()}))}function $(e,t){if(void 0===t&&(t="observed"),w())return e();var r=u.useRef(null);if(!r.current){var n={reaction:null,forceUpdate:null,stateVersion:Symbol(),name:t,subscribe:function(e){return g.unregister(n),n.forceUpdate=e,n.reaction||(T(n),n.forceUpdate()),function(){var e;n.forceUpdate=null,null==(e=n.reaction)||e.dispose(),n.reaction=null}},getSnapshot:function(){return x?S.stateVersion:n.stateVersion}};r.current=n}var o,i,a=r.current;if(a.reaction||(T(a),g.register(r,a,a)),u.useDebugValue(a.reaction,y),p(a.subscribe,a.getSnapshot),a.reaction.track((function(){try{o=e()}catch(e){i=e}})),i)throw i;return o}var z="function"==typeof Symbol&&Symbol.for,O=z?Symbol.for("react.forward_ref"):"function"==typeof c&&c((function(e){return null})).$$typeof,R=z?Symbol.for("react.memo"):"function"==typeof f&&f((function(e){return null})).$$typeof;function E(e,t){var r;if(R&&e.$$typeof===R)throw new Error("[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.");if(w())return e;var n=null!=(r=null==t?void 0:t.forwardRef)&&r,o=e,i=e.displayName||e.name;if(O&&e.$$typeof===O&&(n=!0,"function"!=typeof(o=e.render)))throw new Error("[mobx-react-lite] `render` property of ForwardRef was not a function");var a,u,s=function(e,t){return $((function(){return o(e,t)}),i)};return s.displayName=e.displayName,Object.defineProperty(s,"name",{value:e.name,writable:!0,configurable:!0}),e.contextTypes&&(s.contextTypes=e.contextTypes),n&&(s=c(s)),s=f(s),a=e,u=s,Object.keys(a).forEach((function(e){V[e]||Object.defineProperty(u,e,Object.getOwnPropertyDescriptor(a,e))})),s}var U,V={$$typeof:!0,render:!0,compare:!0,type:!0,displayName:!0};function j(e){var t=e.children||e.render;return"function"!=typeof t?null:$(t)}function N(e,t){return s((function(){return i(e(),t,{autoBind:!0})}))[0]}function A(e){var t=s((function(){return i(e,{},{deep:!1})}))[0];return a((function(){Object.assign(t,e)})),t}function D(e,t){var r=t&&A(t);return s((function(){return i(e(r),void 0,{autoBind:!0})}))[0]}j.displayName="Observer",m(l);var F=null!=(U=g.finalizeAllImmediately)?U:function(){};function k(e,t){return void 0===t&&(t="observed"),$(e,t)}function P(e){h(e)}export{j as Observer,g as _observerFinalizationRegistry,F as clearTimers,h as enableStaticRendering,v as isObserverBatched,w as isUsingStaticRendering,E as observer,m as observerBatching,A as useAsObservableSource,N as useLocalObservable,D as useLocalStore,k as useObserver,P as useStaticRendering};
//# sourceMappingURL=mobxreactlite.esm.production.min.js.map
